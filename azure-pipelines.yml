---
trigger:
  - main

variables:
  vmImage: ubuntu-latest
  azureSubscription: www.lystroem.dk
  resourceGroupName: ondfisk
  location: northeurope
  webAppName: lystroem

stages:
  - stage: Build
    displayName: Build
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImage)
        steps:
          - task: AzureCLI@2
            displayName: Build Bicep Template
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az bicep build --file $(Build.SourcesDirectory)/azuredeploy.bicep
          - task: ArchiveFiles@2
            displayName: Archive Files
            inputs:
              rootFolderOrFile: $(Build.SourcesDirectory)/wwwroot
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          - task: CopyFiles@2
            displayName: Copy Files
            inputs:
              Contents: |
                $(Build.SourcesDirectory)/**/*.json
              targetFolder: $(Build.ArtifactStagingDirectory)
          - task: PublishPipelineArtifact@1
            displayName: Publish Pipeline Artifact
            inputs:
              artifactName: drop
              targetPath: $(Build.ArtifactStagingDirectory)

  - stage: Validate
    displayName: Validate
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Validate
        displayName: Validate
        environment: Production
        pool:
          vmImage: $(vmImage)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureResourceManagerTemplateDeployment@3
                  displayName: Validate Azure Resources Deployment
                  inputs:
                    azureResourceManagerConnection: $(azureSubscription)
                    resourceGroupName: $(resourceGroupName)
                    location: $(location)
                    csmFile: $(Pipeline.Workspace)/drop/azuredeploy.json
                    csmParametersFile: $(Pipeline.Workspace)/drop/azuredeploy.parameters.json
                    deploymentMode: Validation

  - stage: Deploy
    displayName: Deploy
    dependsOn: Validate
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: Production
        pool:
          vmImage: $(vmImage)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureResourceManagerTemplateDeployment@3
                  displayName: Deploy Azure Resources
                  inputs:
                    azureResourceManagerConnection: $(azureSubscription)
                    resourceGroupName: $(resourceGroupName)
                    location: $(location)
                    csmFile: $(Pipeline.Workspace)/drop/azuredeploy.json
                    csmParametersFile: $(Pipeline.Workspace)/drop/azuredeploy.parameters.json
                    deploymentMode: Incremental
                - task: AzureWebApp@1
                  displayName: Deploy Azure Web App
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appName: $(webAppName)
                    appType: webAppLinux
                    package: $(Pipeline.Workspace)/drop/**/*.zip
